" VIM Default settings
runtime! debian.vim
if has("syntax")
  syntax on
endif

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

set number relativenumber

" Tab Spacing
set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2

" vim-plugin
call plug#begin('~/.vim/plugged')
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-surround'
Plug 'itchyny/lightline.vim'
Plug 'tpope/vim-fugitive'
Plug 'terryma/vim-multiple-cursors'
Plug 'preservim/nerdtree'
Plug 'editorconfig/editorconfig-vim'
Plug 'airblade/vim-gitgutter'
Plug 'frazrepo/vim-rainbow'
Plug 'preservim/nerdcommenter'

Plug 'mileszs/ack.vim'
Plug 'rking/ag.vim'
Plug 'dyng/ctrlsf.vim'
Plug 'thoughtbot/vim-rspec'
call plug#end()

" Lightline
set laststatus=2
if !has('gui_running')
  set t_Co=256
end
set noshowmode

let g:lightline = {
\ 'colorscheme': 'jellybeans',
\ 'active': {
\ 'left': [ [ 'mode', 'paste' ],
\ [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
\ },
\ 'component_function': {
\ 'gitbranch': 'FugitiveHead'
\ },
\ }

" Vim-rainbow
let g:rainbow_active = 1
filetype plugin on

" NERDcommenter
let g:NERDSpaceDelims = 1
let g:NERDDefaultAlign = 'left'

" Silver surfer ag
if executable('ag')
  let g:ackprg = 'ag --path-to-ignore ~/.ignore --vimgrep'
end

" AG vim
let g:ag_prg = 'ag --path-to-ignore ~/.ignore --vimgrep'
let g:ctrlsf_ackprg = 'ag'
let g:ctrlsf_extra_backend_args = { 'ag': '--path-to-ignore ~/.ignore' }

let g:rspec_command = '!bin/rspec {spec}'
" vim gitgutter
set updatetime=100

" Hotkeys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>
noremap <leader>h gT
noremap <leader>l gt

nnoremap <silent> <leader>p :FZF<cr>
nnoremap <silent> <leader>P :FZF ~<cr>
nnoremap <silent> <leader>b :NERDTree<cr>
nnoremap <silent> <leader>B :NERDTreeClose<cr>
nnoremap <leader>f :CtrlSF<space>
nnoremap <leader>F :CtrlSFOpen<cr>
nnoremap <leader>R :call RunCurrentSpecFile()<cr>
nnoremap <leader>r :call RunNearestSpec()<cr>
nnoremap <leader>g :Git blame<cr>
